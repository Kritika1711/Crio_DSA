video lecture: https://www.youtube.com/watch?v=34l1kTIQCIA

public boolean canPartition(int[] nums) {
        int tar=0,sum=0;int n=nums.length;
        for(int i=0;i<n;i++)sum+=nums[i];
        tar=sum/2;
        if(sum%2!=0)return false;
        boolean[][] dp = new boolean[n+1][tar+1];

        for(int i=0;i<=n;i++){
            for(int j=0;j<=tar;j++){
                if(i==0 || j==0){
                    dp[i][j]=false;//base case
                }
                else if(nums[i-1]>j){
                    dp[i][j]=dp[i-1][j];//skip case
                }
                else if(nums[i-1]==j){
                    dp[i][j]=true;
                }
                else{
                    dp[i][j] = (dp[i-1][j] || dp[i-1][j-nums[i-1]]);
                   
                }
            }
        }
        
        return dp[n][tar];
    }
